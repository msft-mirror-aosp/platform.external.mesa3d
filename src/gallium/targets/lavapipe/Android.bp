/*
 * Copyright (C) 2025 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package {
    // See: http://go/android-license-faq
    default_applicable_licenses: ["external_mesa3d_license"],
}

cc_library_shared {
    name: "vulkan.lvp",
    host_supported: true,
    defaults: [
        "mesa_common_defaults",
    ],
    header_libs: [
        "mesa_gallium_headers",
        "mesa_gallium_auxiliary_headers",
        "mesa_gallium_drivers_headers",
        "mesa_llvmpipe_headers",
        "mesa_nir_headers",
        "mesa_compiler_headers",
    ],
    generated_headers: [
        "vk_cmd_enqueue_entrypoints_header",
        "git_sha1_header",
        "vk_cmd_queue_header",
        "vk_physical_device_features_header",
        "vk_physical_device_properties_header",
        "vk_dispatch_trampolines_header",
        "spirv_info_header",
        "nir_intrinsics_header",
        "nir_intrinsics_indices_header",
        "etc2_rgba_stitch_glsl.h",
        "vk_cmd_queue_header",
        "vk_cmd_enqueue_entrypoints_header",
        "spirv_info_header",
        "vk_dispatch_table_header",
        "vk_enum_to_str_header",
        "nir_opcodes_header",
        "builtin_types_header",
        "wsi_common_entrypoints_header",
        "u_format_gen_header",
        "mesa_lvp_vk_entrypoints_header",
        "vk_struct_type_cast_header",
        "ir_expression_operation_header",
        "vk_format_info_header",
        "vk_extensions_header",
        "nir_builder_opcodes_header",
        "vk_common_entrypoints_header",
    ],
    generated_sources: [
        "mesa_lvp_vk_entrypoints_impl",
    ],
    srcs: [
        ":mesa_lavapipe_files",
        "lavapipe_target.c",
    ],
    cflags: [
        "-DGALLIUM_LLVMPIPE",
        "-DLVP_USE_WSI_PLATFORM",
    ],
    ldflags: [
        // Mesa always adds Bsymbolic when available (see 'ld_args_bsymbolic' in Meson build). Duplicate that
        // behavior here. '--gc-sections' has stronger justification: this lets drivers drop
        // shared code unused by that specific driver (particularly relevant for Vulkan drivers).
        "-Wl,-Bsymbolic",
        "-Wl,--gc-sections",
    ],
    whole_static_libs: [
        "mesa_vulkan_util",
        "mesa_vulkan_runtime",
        "mesa_vulkan_wsi",
    ],
    static_libs: [
        "mesa_util_c11",
        "mesa_util",
        "mesa_nir",
        "mesa_compiler",
        "mesa_util_format",
        "mesa_gallium",
        "mesa_pipe_loader_static",
        "mesa_glsl",
        "mesa_llvmpipe",
        "mesa_ws_null",
        "mesa_blake3",
        "mesa_spirv",
        "mesa_wsw",
        "mesa_loader",
        "libLLVM16_swiftshader",
    ],
    shared_libs: [
        "libzstd",
    ],
    target: {
        android: {
            srcs: [
                ":mesa_lvp_android_files",
            ],
            static_libs: [
                "mesa_u_gralloc",
            ],
            header_libs: [
                "hwvulkan_headers",
                "libnativebase_headers",
            ],
            shared_libs: [
                "libsync",
                "libhardware",
                "libnativewindow",
                "libhidlbase",
                "libutils",
                "liblog",
                "libcutils",
            ],
        },
    },
}
